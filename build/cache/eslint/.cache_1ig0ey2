[{"/Users/nemanja/development/react/chat-translator-fe/pages/_app.tsx":"1","/Users/nemanja/development/react/chat-translator-fe/pages/auth.tsx":"2","/Users/nemanja/development/react/chat-translator-fe/pages/friends.tsx":"3","/Users/nemanja/development/react/chat-translator-fe/pages/index.tsx":"4","/Users/nemanja/development/react/chat-translator-fe/components/chats/Chat.tsx":"5","/Users/nemanja/development/react/chat-translator-fe/components/chats/ChatItem.tsx":"6","/Users/nemanja/development/react/chat-translator-fe/components/chats/ChatSettings.tsx":"7","/Users/nemanja/development/react/chat-translator-fe/components/chats/ChatsDrawer.tsx":"8","/Users/nemanja/development/react/chat-translator-fe/components/chats/ChatsList.tsx":"9","/Users/nemanja/development/react/chat-translator-fe/components/friendRequests/FriendRequestItem.tsx":"10","/Users/nemanja/development/react/chat-translator-fe/components/friendRequests/FriendRequestsList.tsx":"11","/Users/nemanja/development/react/chat-translator-fe/components/friends/FriendItem.tsx":"12","/Users/nemanja/development/react/chat-translator-fe/components/friends/FriendsList.tsx":"13","/Users/nemanja/development/react/chat-translator-fe/components/messages/Message.tsx":"14","/Users/nemanja/development/react/chat-translator-fe/components/messages/MessageInput.tsx":"15","/Users/nemanja/development/react/chat-translator-fe/components/messages/MessagesList.tsx":"16","/Users/nemanja/development/react/chat-translator-fe/components/navbar/Navbar.tsx":"17","/Users/nemanja/development/react/chat-translator-fe/components/shared/Modal.tsx":"18","/Users/nemanja/development/react/chat-translator-fe/components/shared/ToastError.tsx":"19","/Users/nemanja/development/react/chat-translator-fe/components/shared/ToastSuccess.tsx":"20","/Users/nemanja/development/react/chat-translator-fe/components/shared/Toggle.tsx":"21"},{"size":1467,"mtime":1666441821774,"results":"22","hashOfConfig":"23"},{"size":4574,"mtime":1667031686145,"results":"24","hashOfConfig":"23"},{"size":8272,"mtime":1666886766901,"results":"25","hashOfConfig":"23"},{"size":2519,"mtime":1666442095834,"results":"26","hashOfConfig":"23"},{"size":7119,"mtime":1674243750451,"results":"27","hashOfConfig":"23"},{"size":2452,"mtime":1674236810458,"results":"28","hashOfConfig":"23"},{"size":4608,"mtime":1674243931850,"results":"29","hashOfConfig":"23"},{"size":1789,"mtime":1654953593748,"results":"30","hashOfConfig":"23"},{"size":1189,"mtime":1674235853748,"results":"31","hashOfConfig":"23"},{"size":2320,"mtime":1665841222758,"results":"32","hashOfConfig":"23"},{"size":815,"mtime":1665840596306,"results":"33","hashOfConfig":"23"},{"size":3131,"mtime":1666441143698,"results":"34","hashOfConfig":"23"},{"size":2002,"mtime":1665840582397,"results":"35","hashOfConfig":"23"},{"size":3454,"mtime":1674243841536,"results":"36","hashOfConfig":"23"},{"size":3336,"mtime":1674242216855,"results":"37","hashOfConfig":"23"},{"size":2089,"mtime":1674243732053,"results":"38","hashOfConfig":"23"},{"size":2178,"mtime":1665240152494,"results":"39","hashOfConfig":"23"},{"size":949,"mtime":1651427487912,"results":"40","hashOfConfig":"23"},{"size":519,"mtime":1664118583454,"results":"41","hashOfConfig":"23"},{"size":524,"mtime":1651235668109,"results":"42","hashOfConfig":"23"},{"size":1032,"mtime":1664107316371,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"91tffp",{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/nemanja/development/react/chat-translator-fe/pages/_app.tsx",[],[],"/Users/nemanja/development/react/chat-translator-fe/pages/auth.tsx",[],[],"/Users/nemanja/development/react/chat-translator-fe/pages/friends.tsx",["111","112"],[],"import React, { useEffect, useState } from 'react'\nimport { FriendsSelectedTab } from '../ts/friends'\nimport { useFetchAllFriends, useRemoveFriend, useSearchUser } from '../hooks/friends'\nimport FriendsList from '../components/friends/FriendsList'\nimport { useLocale } from '../hooks/i18n'\nimport FriendRequestsList from '../components/friendRequests/FriendRequestsList'\nimport useDebounce from '../hooks/helpers/useDebounce'\nimport { configureToast } from '../utils/toast'\nimport { useRouter } from 'next/router'\nimport { useThemeContext } from '../providers/ThemeProvider'\nimport socket from '../sockets'\nimport { SocketEvents } from '../ts/sockets'\nimport Modal from '../components/shared/Modal'\nimport { toast } from 'react-toastify'\nimport ToastSuccess from '../components/shared/ToastSuccess'\nimport { useFetchAllChats } from '../hooks/chats'\nimport useWindowDimensions from '../hooks/helpers/useWindowDimensions'\nimport {\n  WINDOW_WIDTH_BREAKPOINT_MD,\n  WINDOW_WIDTH_BREAKPOINT_SM\n} from '../constants/windowBreakpoints'\n\nconst SEARCH_FRIEND_OFFSET = 0\nconst SEARCH_FRIEND_LIMIT = 10\nconst SEARCH_INPUT_DEBOUNCE_TIMEOUT_MS = 500\n\nconst Friends = () => {\n  const { isDark } = useThemeContext()\n  const { t } = useLocale()\n  const router = useRouter()\n  const [selectedTab, setSelectedTab] = useState<FriendsSelectedTab>(FriendsSelectedTab.myFriends)\n  const [searchText, setSearchText] = useState('')\n  const [isSettingsModalOpen, setIsSettingsModalOpen] = useState(false)\n  const [activeFriendIdToDelete, setActiveFriendIdToDelete] = useState('')\n  const debouncedSearchText = useDebounce(searchText, SEARCH_INPUT_DEBOUNCE_TIMEOUT_MS)\n  const { width: windowWidth } = useWindowDimensions()\n\n  const { data: allFriends, invalidateFriends } = useFetchAllFriends()\n  const { data: searchFriendList, refetch: fetchUsers, isRefetching: isRefetchingUsers } =\n    useSearchUser(debouncedSearchText, SEARCH_FRIEND_OFFSET, SEARCH_FRIEND_LIMIT)\n  const { data: chats = [] } = useFetchAllChats(true)\n  const { mutate: removeFriend } = useRemoveFriend(() => {\n    toast(<ToastSuccess text={t.friends.friendRemoved} />)\n    setIsSettingsModalOpen(false)\n  })\n\n  useEffect(() => {\n    configureToast()\n    socket.on(SocketEvents.newFriendRequest, handleFriendRequest)\n    return () => {\n      socket.off(SocketEvents.newFriendRequest, handleFriendRequest)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (debouncedSearchText) fetchUsers()\n  }, [debouncedSearchText])\n\n  useEffect(() => {\n    const path = router.asPath\n    if (path === `/friends?${FriendsSelectedTab.myFriends}`) setSelectedTab(FriendsSelectedTab.myFriends)\n    if (path === `/friends?${FriendsSelectedTab.receivedRequests}`) setSelectedTab(FriendsSelectedTab.receivedRequests)\n    if (path === `/friends?${FriendsSelectedTab.sentRequests}`) setSelectedTab(FriendsSelectedTab.sentRequests)\n    if (path === `/friends?${FriendsSelectedTab.addNewFriend}`) setSelectedTab(FriendsSelectedTab.addNewFriend)\n  }, [router.asPath])\n\n  const handleFriendRequest = () => {\n    invalidateFriends()\n  }\n\n  const renderFriendsTab = (tab: FriendsSelectedTab, title: string) => (\n    <div\n      className={`\n        flex flex-row px-4 py-3 mx-4 rounded-3xl cursor-pointer w-52 \n        justify-center items-center overflow-hidden whitespace-nowrap mt-2\n        ${tab === selectedTab ? 'bg-indigo-500 text-white' : 'text-gray-600 bg-gray-200'}`\n    }\n      onClick={() => router.push(`/friends?${tab}`)}\n    >\n      <div>{title}</div>\n      {tab !== FriendsSelectedTab.addNewFriend && (\n        <div className='flex items-center justify-center bg-white text-gray-500 rounded-full px-2 ml-2 text-sm border'>\n          {getItemsNumberByTab(tab)}\n        </div>\n      )}\n    </div>\n  )\n\n  const getItemsNumberByTab = (tab: FriendsSelectedTab) => {\n    if (!allFriends) return 0\n    if (tab === FriendsSelectedTab.myFriends)\n      return allFriends.friends.length\n    if (tab === FriendsSelectedTab.sentRequests)\n      return allFriends.friendRequests.filter(request => request.requestedByMe).length\n    if (tab === FriendsSelectedTab.receivedRequests)\n      return allFriends.friendRequests.filter(request => !request.requestedByMe).length\n    return 0\n  }\n\n  const renderSearchResultList = () => {\n    if (debouncedSearchText && searchFriendList) return (\n      <FriendsList\n        friends={searchFriendList}\n        isSearchList\n        isRefetching={isRefetchingUsers}\n        allFriends={allFriends}\n      />\n    )\n\n    return <div className='text-gray-400 mt-8'>{t.friends.searchResultsWillAppearHere}</div>\n  }\n\n  const onSearchInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchText(e.target.value)\n  }\n\n  const friendsTabs = [\n    { tab: FriendsSelectedTab.myFriends, title: t.friends.tabTitles.myFriends },\n    {\n      tab: FriendsSelectedTab.receivedRequests,\n      title: windowWidth > WINDOW_WIDTH_BREAKPOINT_MD\n        ? t.friends.tabTitles.receivedRequests\n        : t.friends.tabTitles.received\n    },\n    {\n      tab: FriendsSelectedTab.sentRequests,\n      title: windowWidth > WINDOW_WIDTH_BREAKPOINT_MD\n        ? t.friends.tabTitles.sentRequests\n        : t.friends.tabTitles.sent\n    },\n    { tab: FriendsSelectedTab.addNewFriend, title: t.friends.tabTitles.addNewFriend }\n  ]\n\n  const myFriends = allFriends?.friends\n  const receivedRequests = allFriends && allFriends.friendRequests.filter(friendRequest => !friendRequest.requestedByMe)\n  const sentRequests = allFriends && allFriends.friendRequests.filter(friendRequest => friendRequest.requestedByMe)\n\n  return (\n    <div className={`flex flex-col h-screen ${isDark ? 'bg-gray-700' : 'bg-gray-50'} items-center`}>\n      <div className={\n        `flex ${windowWidth > WINDOW_WIDTH_BREAKPOINT_SM ? 'flex-row' : 'flex-col'} w-full pt-8 items-center justify-center`\n      }>\n        {friendsTabs.map(tabItem => renderFriendsTab(tabItem.tab, tabItem.title))}\n      </div>\n      {allFriends && (\n        <div className='flex flex-col items-center w-[1024px] mt-6 overflow-y-scroll mb-20'>\n          {selectedTab === FriendsSelectedTab.myFriends && myFriends && (\n            <FriendsList\n              friends={myFriends}\n              setIsSettingsModalOpen={setIsSettingsModalOpen}\n              setActiveFriendIdToDelete={setActiveFriendIdToDelete}\n            />\n          )}\n          {selectedTab === FriendsSelectedTab.receivedRequests && receivedRequests && (\n            <FriendRequestsList friendsRequests={receivedRequests} chats={chats} />\n          )}\n          {selectedTab === FriendsSelectedTab.sentRequests && sentRequests && (\n            <FriendRequestsList friendsRequests={sentRequests} />\n          )}\n          {selectedTab === FriendsSelectedTab.addNewFriend && (\n            <div className='w-full flex flex-col items-center'>\n              <input\n                className='w-80 focus:outline-none p-2 rounded-2xl h-[40px] resize-none border mt-6'\n                onInput={onSearchInputChange}\n                value={searchText}\n                placeholder={t.friends.addFriendInputPlaceholder}\n                data-cy='addFriendSearchInput'\n              />\n              {renderSearchResultList()}\n            </div>\n          )}\n        </div>\n      )}\n      <Modal\n        isOpen={isSettingsModalOpen}\n        onClose={() => {\n          setIsSettingsModalOpen(false)\n          setActiveFriendIdToDelete('')\n        }}\n      >\n        <div className='my-4 mx-2'>\n          <div className='text-gray-600'>{t.friends.areYouSureDeleteMessage}</div>\n          <div className='flex flex-row justify-center mt-6'>\n            <div\n              className='flex items-center justify-center w-16 h-8 bg-teal-400 rounded-xl cursor-pointer text-white mr-2'\n              onClick={() => removeFriend({ userId: activeFriendIdToDelete })}\n            >\n              {t.general.yes}\n            </div>\n            <div\n              className='flex items-center justify-center w-16 h-8 bg-gray-300 rounded-xl cursor-pointer text-white ml-2'\n              onClick={() => {\n                setIsSettingsModalOpen(false)\n                setActiveFriendIdToDelete('')\n              }}\n            >\n              {t.general.no}\n            </div>\n          </div>\n        </div>\n      </Modal>\n    </div>\n  )\n}\n\nexport default Friends","/Users/nemanja/development/react/chat-translator-fe/pages/index.tsx",["113","114"],[],"import type { NextPage } from 'next'\nimport { useFetchAllChats } from '../hooks/chats'\nimport { useLoggedUser } from '../hooks/auth'\nimport ChatsDrawer from '../components/chats/ChatsDrawer'\nimport Chat from '../components/chats/Chat'\nimport ChatsProvider from '../providers/ChatsProvider'\nimport { useEffect } from 'react'\nimport socket from '../sockets/index'\nimport { SocketEvents } from '../ts/sockets'\nimport { configureToast } from '../utils/toast'\nimport { useLocale } from '../hooks/i18n'\nimport useWindowFocus from '../hooks/helpers/useWindowFocus'\nimport * as Sentry from '@sentry/react'\nimport { BrowserTracing } from '@sentry/tracing'\n\nconst Home: NextPage = () => {\n  const loggedUser = useLoggedUser()\n  const { t } = useLocale()\n  const isWindowFocused = useWindowFocus()\n\n  const { data: chats = [], isLoading: isLoadingChats, invalidateChats } = useFetchAllChats()\n\n  useEffect(() => {\n    socket.on(SocketEvents.connect, () => {\n      if (loggedUser) {\n        socket.emit('createUserSession', {\n          userId: loggedUser._id,\n          socketId: socket.id\n        })\n      }\n    })\n  }, [loggedUser])\n\n  useEffect(() => {\n    configureToast()\n    socket.on(SocketEvents.loadChatSettings, invalidateChats)\n    socket.on(SocketEvents.updateFriendVisitData, invalidateChats)\n    socket.on(SocketEvents.newFriendRequest, handleFriendRequest)\n    return () => {\n      socket.off(SocketEvents.loadChatSettings, invalidateChats)\n      socket.off(SocketEvents.updateFriendVisitData, invalidateChats)\n      socket.off(SocketEvents.newFriendRequest, handleFriendRequest)\n    }\n  }, [])\n\n  useEffect(() => {\n    initializeSentry()\n    configureToast()\n    socket.on(SocketEvents.newFriendRequest, handleFriendRequest)\n    return () => {\n      socket.off(SocketEvents.newFriendRequest, handleFriendRequest)\n    }\n  }, [isWindowFocused])\n\n  const initializeSentry = () => {\n    Sentry.init({\n      dsn: process.env.NEXT_PUBLIC_SENTRY_DSN,\n      integrations: [new BrowserTracing()],\n      tracesSampleRate: 1.0\n    })\n  }\n\n  const handleFriendRequest = () => {\n    if (!isWindowFocused) {\n      document.title = `${t.general.title} (${t.friends.newFriendRequest})`\n    }\n  }\n\n  return (\n    <div className='h-screen' data-cy='homeScreen'>\n      <ChatsProvider>\n        <div className='flex flex-row h-[92%]'>\n          <ChatsDrawer chats={chats} isLoadingChats={isLoadingChats} />\n          <Chat invalidateChats={invalidateChats} />\n        </div>\n      </ChatsProvider>\n    </div>\n  )\n}\n\nexport default Home\n","/Users/nemanja/development/react/chat-translator-fe/components/chats/Chat.tsx",["115","116","117","118"],[],"/Users/nemanja/development/react/chat-translator-fe/components/chats/ChatItem.tsx",[],[],"/Users/nemanja/development/react/chat-translator-fe/components/chats/ChatSettings.tsx",[],[],"/Users/nemanja/development/react/chat-translator-fe/components/chats/ChatsDrawer.tsx",["119"],[],"import React, { FC, useEffect } from 'react'\nimport ChatsList from './ChatsList'\nimport { Chat } from '../../ts/chats'\nimport { useChatsContext } from '../../providers/ChatsProvider'\nimport { useThemeContext } from '../../providers/ThemeProvider'\n\ntype ChatsDrawerProps = {\n  chats: Chat[]\n  isLoadingChats: boolean\n}\n\nconst ChatsDrawer: FC<ChatsDrawerProps> = ({ chats, isLoadingChats }) => {\n  const { isDark } = useThemeContext()\n  const { selectedChat, setSelectedChat } = useChatsContext()\n\n  useEffect(() => {\n    if (!isLoadingChats && !selectedChat && chats[0]) setSelectedChat(chats[0])\n    checkAndUpdateSelectedChat()\n  }, [chats])\n\n  const checkAndUpdateSelectedChat = () => {\n    const selectedChatNewestVersion = chats.find(chat => chat._id === selectedChat?._id)\n    if (!selectedChat || !selectedChatNewestVersion) return\n\n    const me = selectedChat.me\n    const meNew = selectedChatNewestVersion.me\n    const friend = selectedChat.friend\n    const friendNew = selectedChatNewestVersion.friend\n    const isSelectedChatLanguageChanged = (meNew.sendLanguage !== me.sendLanguage)\n      || (meNew.receiveLanguage !== me.receiveLanguage)\n      || (meNew.showOriginalMessages !== me.showOriginalMessages)\n      || (friendNew.sendLanguage !== friend.sendLanguage)\n      || (friendNew.receiveLanguage !== friend.receiveLanguage)\n      || (friendNew.lastVisit !== friend.lastVisit)\n    if (isSelectedChatLanguageChanged && selectedChatNewestVersion) setSelectedChat(selectedChatNewestVersion)\n  }\n\n  return (\n    <div className={`flex h-full w-[25%] ${isDark ? 'bg-gray-700 border-gray-600' : 'bg-gray-100'} border-r`}>\n      {!isLoadingChats && <ChatsList chats={chats} selectedChat={selectedChat} setSelectedChat={setSelectedChat} />}\n    </div>\n  )\n}\n\nexport default ChatsDrawer","/Users/nemanja/development/react/chat-translator-fe/components/chats/ChatsList.tsx",[],[],"/Users/nemanja/development/react/chat-translator-fe/components/friendRequests/FriendRequestItem.tsx",[],[],"/Users/nemanja/development/react/chat-translator-fe/components/friendRequests/FriendRequestsList.tsx",[],[],"/Users/nemanja/development/react/chat-translator-fe/components/friends/FriendItem.tsx",[],[],"/Users/nemanja/development/react/chat-translator-fe/components/friends/FriendsList.tsx",[],[],"/Users/nemanja/development/react/chat-translator-fe/components/messages/Message.tsx",[],[],"/Users/nemanja/development/react/chat-translator-fe/components/messages/MessageInput.tsx",[],[],"/Users/nemanja/development/react/chat-translator-fe/components/messages/MessagesList.tsx",[],[],"/Users/nemanja/development/react/chat-translator-fe/components/navbar/Navbar.tsx",[],[],"/Users/nemanja/development/react/chat-translator-fe/components/shared/Modal.tsx",["120"],[],"import React, { FC, ReactElement, useEffect, useRef } from 'react'\n\ntype ModalProps = {\n  children: ReactElement\n  isOpen: boolean\n  onClose: Function\n}\n\nconst Modal: FC<ModalProps> = ({ children, isOpen, onClose }) => {\n  const wrapperRef = useRef(null)\n\n  const handleClickOutside = (event: MouseEvent) => {\n    if (wrapperRef.current && !(wrapperRef.current as any).contains(event.target)) {\n      onClose()\n    }\n  }\n\n  useEffect(() => {\n    document.addEventListener('click', handleClickOutside, true)\n    return () => {\n      document.removeEventListener('click', handleClickOutside, true)\n    }\n  }, [])\n\n  if (!isOpen) return null\n\n  return (\n    <div className='fixed top-0 left-0 w-full h-full bg-black/30 z-[10]'>\n      <div\n        ref={wrapperRef}\n        className='fixed bg-white top-[50%] left-[50%] translate-x-[-50%] translate-y-[-50%] p-4 rounded-2xl'\n      >\n        {children}\n      </div>\n    </div>\n  )\n}\n\nexport default Modal","/Users/nemanja/development/react/chat-translator-fe/components/shared/ToastError.tsx",[],[],"/Users/nemanja/development/react/chat-translator-fe/components/shared/ToastSuccess.tsx",[],[],"/Users/nemanja/development/react/chat-translator-fe/components/shared/Toggle.tsx",[],[],{"ruleId":"121","severity":1,"message":"122","line":53,"column":6,"nodeType":"123","endLine":53,"endColumn":8,"suggestions":"124"},{"ruleId":"121","severity":1,"message":"125","line":57,"column":6,"nodeType":"123","endLine":57,"endColumn":27,"suggestions":"126"},{"ruleId":"121","severity":1,"message":"127","line":44,"column":6,"nodeType":"123","endLine":44,"endColumn":8,"suggestions":"128"},{"ruleId":"121","severity":1,"message":"122","line":53,"column":6,"nodeType":"123","endLine":53,"endColumn":23,"suggestions":"129"},{"ruleId":"121","severity":1,"message":"130","line":60,"column":6,"nodeType":"123","endLine":60,"endColumn":22,"suggestions":"131"},{"ruleId":"121","severity":1,"message":"132","line":68,"column":6,"nodeType":"123","endLine":68,"endColumn":39,"suggestions":"133"},{"ruleId":"121","severity":1,"message":"134","line":73,"column":6,"nodeType":"123","endLine":73,"endColumn":19,"suggestions":"135"},{"ruleId":"121","severity":1,"message":"136","line":79,"column":6,"nodeType":"123","endLine":79,"endColumn":23,"suggestions":"137"},{"ruleId":"121","severity":1,"message":"138","line":19,"column":6,"nodeType":"123","endLine":19,"endColumn":13,"suggestions":"139"},{"ruleId":"121","severity":1,"message":"140","line":23,"column":6,"nodeType":"123","endLine":23,"endColumn":8,"suggestions":"141"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleFriendRequest'. Either include it or remove the dependency array.","ArrayExpression",["142"],"React Hook useEffect has a missing dependency: 'fetchUsers'. Either include it or remove the dependency array.",["143"],"React Hook useEffect has missing dependencies: 'handleFriendRequest' and 'invalidateChats'. Either include them or remove the dependency array.",["144"],["145"],"React Hook useEffect has missing dependencies: 'handleChatVisited', 'loggedUser', 'onFriendStartedTyping', 'onFriendStoppedTyping', 'resetQueryAndPageParamData', and 'selectedChat'. Either include them or remove the dependency array.",["146"],"React Hook useEffect has a missing dependency: 'onLoadMessage'. Either include it or remove the dependency array.",["147"],"React Hook useEffect has a missing dependency: 'checkIsLastPageReached'. Either include it or remove the dependency array.",["148"],"React Hook useEffect has missing dependencies: 't.general.title' and 't.messages.new'. Either include them or remove the dependency array.",["149"],"React Hook useEffect has missing dependencies: 'checkAndUpdateSelectedChat', 'isLoadingChats', 'selectedChat', and 'setSelectedChat'. Either include them or remove the dependency array.",["150"],"React Hook useEffect has a missing dependency: 'handleClickOutside'. Either include it or remove the dependency array.",["151"],{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},{"desc":"168","fix":"169"},{"desc":"170","fix":"171"},"Update the dependencies array to be: [handleFriendRequest]",{"range":"172","text":"173"},"Update the dependencies array to be: [debouncedSearchText, fetchUsers]",{"range":"174","text":"175"},"Update the dependencies array to be: [handleFriendRequest, invalidateChats]",{"range":"176","text":"177"},"Update the dependencies array to be: [handleFriendRequest, isWindowFocused]",{"range":"178","text":"179"},"Update the dependencies array to be: [handleChatVisited, loggedUser, onFriendStartedTyping, onFriendStoppedTyping, resetQueryAndPageParamData, selectedChat, selectedChatId]",{"range":"180","text":"181"},"Update the dependencies array to be: [selectedChatId, isWindowFocused, onLoadMessage]",{"range":"182","text":"183"},"Update the dependencies array to be: [allMessages, checkIsLastPageReached]",{"range":"184","text":"185"},"Update the dependencies array to be: [isWindowFocused, t.general.title, t.messages.new]",{"range":"186","text":"187"},"Update the dependencies array to be: [chats, checkAndUpdateSelectedChat, isLoadingChats, selectedChat, setSelectedChat]",{"range":"188","text":"189"},"Update the dependencies array to be: [handleClickOutside]",{"range":"190","text":"191"},[2360,2362],"[handleFriendRequest]",[2432,2453],"[debouncedSearchText, fetchUsers]",[1594,1596],"[handleFriendRequest, invalidateChats]",[1828,1845],"[handleFriendRequest, isWindowFocused]",[2555,2571],"[handleChatVisited, loggedUser, onFriendStartedTyping, onFriendStoppedTyping, resetQueryAndPageParamData, selectedChat, selectedChatId]",[2738,2771],"[selectedChatId, isWindowFocused, onLoadMessage]",[2869,2882],"[allMessages, checkIsLastPageReached]",[3032,3049],"[isWindowFocused, t.general.title, t.messages.new]",[634,641],"[chats, checkAndUpdateSelectedChat, isLoadingChats, selectedChat, setSelectedChat]",[607,609],"[handleClickOutside]"]